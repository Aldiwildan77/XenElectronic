// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gifff/xenelectronic/models"
)

// ViewOneOrderOKCode is the HTTP code returned for type ViewOneOrderOK
const ViewOneOrderOKCode int = 200

/*ViewOneOrderOK Returned one order

swagger:response viewOneOrderOK
*/
type ViewOneOrderOK struct {

	/*
	  In: Body
	*/
	Payload *models.Order `json:"body,omitempty"`
}

// NewViewOneOrderOK creates ViewOneOrderOK with default headers values
func NewViewOneOrderOK() *ViewOneOrderOK {

	return &ViewOneOrderOK{}
}

// WithPayload adds the payload to the view one order o k response
func (o *ViewOneOrderOK) WithPayload(payload *models.Order) *ViewOneOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the view one order o k response
func (o *ViewOneOrderOK) SetPayload(payload *models.Order) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ViewOneOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ViewOneOrderDefault error

swagger:response viewOneOrderDefault
*/
type ViewOneOrderDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewViewOneOrderDefault creates ViewOneOrderDefault with default headers values
func NewViewOneOrderDefault(code int) *ViewOneOrderDefault {
	if code <= 0 {
		code = 500
	}

	return &ViewOneOrderDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the view one order default response
func (o *ViewOneOrderDefault) WithStatusCode(code int) *ViewOneOrderDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the view one order default response
func (o *ViewOneOrderDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the view one order default response
func (o *ViewOneOrderDefault) WithPayload(payload *models.Error) *ViewOneOrderDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the view one order default response
func (o *ViewOneOrderDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ViewOneOrderDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
