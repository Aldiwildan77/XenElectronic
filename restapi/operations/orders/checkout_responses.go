// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gifff/xenelectronic/models"
)

// CheckoutCreatedCode is the HTTP code returned for type CheckoutCreated
const CheckoutCreatedCode int = 201

/*CheckoutCreated Created new order from cart

swagger:response checkoutCreated
*/
type CheckoutCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ExtendedOrder `json:"body,omitempty"`
}

// NewCheckoutCreated creates CheckoutCreated with default headers values
func NewCheckoutCreated() *CheckoutCreated {

	return &CheckoutCreated{}
}

// WithPayload adds the payload to the checkout created response
func (o *CheckoutCreated) WithPayload(payload *models.ExtendedOrder) *CheckoutCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the checkout created response
func (o *CheckoutCreated) SetPayload(payload *models.ExtendedOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckoutCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CheckoutDefault error

swagger:response checkoutDefault
*/
type CheckoutDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCheckoutDefault creates CheckoutDefault with default headers values
func NewCheckoutDefault(code int) *CheckoutDefault {
	if code <= 0 {
		code = 500
	}

	return &CheckoutDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the checkout default response
func (o *CheckoutDefault) WithStatusCode(code int) *CheckoutDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the checkout default response
func (o *CheckoutDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the checkout default response
func (o *CheckoutDefault) WithPayload(payload *models.Error) *CheckoutDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the checkout default response
func (o *CheckoutDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckoutDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
