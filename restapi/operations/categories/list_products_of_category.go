// Code generated by go-swagger; DO NOT EDIT.

package categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListProductsOfCategoryHandlerFunc turns a function with the right signature into a list products of category handler
type ListProductsOfCategoryHandlerFunc func(ListProductsOfCategoryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListProductsOfCategoryHandlerFunc) Handle(params ListProductsOfCategoryParams) middleware.Responder {
	return fn(params)
}

// ListProductsOfCategoryHandler interface for that can handle valid list products of category params
type ListProductsOfCategoryHandler interface {
	Handle(ListProductsOfCategoryParams) middleware.Responder
}

// NewListProductsOfCategory creates a new http.Handler for the list products of category operation
func NewListProductsOfCategory(ctx *middleware.Context, handler ListProductsOfCategoryHandler) *ListProductsOfCategory {
	return &ListProductsOfCategory{Context: ctx, Handler: handler}
}

/*ListProductsOfCategory swagger:route GET /categories/{category_id}/products categories listProductsOfCategory

List Products of a category

*/
type ListProductsOfCategory struct {
	Context *middleware.Context
	Handler ListProductsOfCategoryHandler
}

func (o *ListProductsOfCategory) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListProductsOfCategoryParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
