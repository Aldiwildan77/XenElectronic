// Code generated by go-swagger; DO NOT EDIT.

package carts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gifff/xenelectronic/models"
)

// RemoveOneProductFromCartNoContentCode is the HTTP code returned for type RemoveOneProductFromCartNoContent
const RemoveOneProductFromCartNoContentCode int = 204

/*RemoveOneProductFromCartNoContent product is deleted from cart

swagger:response removeOneProductFromCartNoContent
*/
type RemoveOneProductFromCartNoContent struct {
}

// NewRemoveOneProductFromCartNoContent creates RemoveOneProductFromCartNoContent with default headers values
func NewRemoveOneProductFromCartNoContent() *RemoveOneProductFromCartNoContent {

	return &RemoveOneProductFromCartNoContent{}
}

// WriteResponse to the client
func (o *RemoveOneProductFromCartNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*RemoveOneProductFromCartDefault error

swagger:response removeOneProductFromCartDefault
*/
type RemoveOneProductFromCartDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveOneProductFromCartDefault creates RemoveOneProductFromCartDefault with default headers values
func NewRemoveOneProductFromCartDefault(code int) *RemoveOneProductFromCartDefault {
	if code <= 0 {
		code = 500
	}

	return &RemoveOneProductFromCartDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the remove one product from cart default response
func (o *RemoveOneProductFromCartDefault) WithStatusCode(code int) *RemoveOneProductFromCartDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the remove one product from cart default response
func (o *RemoveOneProductFromCartDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the remove one product from cart default response
func (o *RemoveOneProductFromCartDefault) WithPayload(payload *models.Error) *RemoveOneProductFromCartDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove one product from cart default response
func (o *RemoveOneProductFromCartDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveOneProductFromCartDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
